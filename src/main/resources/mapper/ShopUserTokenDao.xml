<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ShopUserTokenDao">

    <resultMap type="com.example.demo.entity.ShopUserToken" id="ShopUserTokenMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
        <result property="loginType" column="login_type" jdbcType="VARCHAR"/>
        <result property="deviceInfor" column="device_infor" jdbcType="VARCHAR"/>
        <result property="isAvailability" column="is_availability" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ShopUserTokenMap">
        select
          id, token, login_type, device_infor, is_availability, user_id, create_time, update_time
        from shop_member.shop_user_token
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ShopUserTokenMap">
        select
          id, token, login_type, device_infor, is_availability, user_id, create_time, update_time
        from shop_member.shop_user_token
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ShopUserTokenMap">
        select
          id, token, login_type, device_infor, is_availability, user_id, create_time, update_time
        from shop_member.shop_user_token
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
            <if test="loginType != null and loginType != ''">
                and login_type = #{loginType}
            </if>
            <if test="deviceInfor != null and deviceInfor != ''">
                and device_infor = #{deviceInfor}
            </if>
            <if test="isAvailability != null">
                and is_availability = #{isAvailability}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into shop_member.shop_user_token(token, login_type, device_infor, is_availability, user_id, create_time, update_time)
        values (#{token}, #{loginType}, #{deviceInfor}, #{isAvailability}, #{userId}, #{createTime}, #{updateTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update shop_member.shop_user_token
        <set>
            <if test="token != null and token != ''">
                token = #{token},
            </if>
            <if test="loginType != null and loginType != ''">
                login_type = #{loginType},
            </if>
            <if test="deviceInfor != null and deviceInfor != ''">
                device_infor = #{deviceInfor},
            </if>
            <if test="isAvailability != null">
                is_availability = #{isAvailability},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from shop_member.shop_user_token where id = #{id}
    </delete>

</mapper>